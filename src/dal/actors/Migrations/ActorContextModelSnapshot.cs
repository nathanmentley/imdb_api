// <auto-generated />
using System;
using IMDBDegrees.DAL.Actors;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IMDBDegrees.DAL.Actors.Migrations
{
    [DbContext(typeof(ActorContext))]
    partial class ActorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IMDBDegrees.DAL.Actors.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BirthYear");

                    b.Property<int?>("DeathYear");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Nconst")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("IMDBDegrees.DAL.Actors.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Profession");
                });

            modelBuilder.Entity("IMDBDegrees.DAL.Actors.Models.Profession", b =>
                {
                    b.HasOne("IMDBDegrees.DAL.Actors.Models.Person")
                        .WithMany("Professions")
                        .HasForeignKey("PersonId");
                });
#pragma warning restore 612, 618
        }
    }
}
