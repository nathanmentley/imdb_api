// <auto-generated />
using System;
using IMDBDegrees.DAL.Titles;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IMDBDegrees.DAL.Titles.Migrations
{
    [DbContext(typeof(TitleContext))]
    partial class TitleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IMDBDegrees.DAL.Titles.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("TitleId");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("IMDBDegrees.DAL.Titles.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EndYear");

                    b.Property<string>("OriginalTitle")
                        .IsRequired();

                    b.Property<string>("PrimaryTitle")
                        .IsRequired();

                    b.Property<int>("Runtime");

                    b.Property<int>("StartYear");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("IMDBDegrees.DAL.Titles.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("IMDBDegrees.DAL.Titles.Models.Genre", b =>
                {
                    b.HasOne("IMDBDegrees.DAL.Titles.Models.Title")
                        .WithMany("Genres")
                        .HasForeignKey("TitleId");
                });

            modelBuilder.Entity("IMDBDegrees.DAL.Titles.Models.Title", b =>
                {
                    b.HasOne("IMDBDegrees.DAL.Titles.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
